#!/usr/bin/env python3
"""
Script de prueba para verificar el setup del backend
"""

try:
    print("üß™ Probando setup del backend MeteorMadness...")
    print("=" * 50)
    
    # Test 1: Importaciones b√°sicas
    print("1. Probando importaciones b√°sicas...")
    import sys
    import os
    sys.path.append(os.path.dirname(__file__))
    
    from models.orbital_elements import OrbitalElements
    from services.orbital_service import OrbitalService
    from services.simulation_service import SimulationService
    print("   ‚úÖ Todas las importaciones exitosas")
    
    # Test 2: Creaci√≥n de servicios
    print("2. Probando creaci√≥n de servicios...")
    orbital_service = OrbitalService()
    simulation_service = SimulationService()
    print("   ‚úÖ Servicios creados correctamente")
    
    # Test 3: Validaci√≥n de elementos orbitales
    print("3. Probando validaci√≥n de elementos orbitales...")
    test_elements = {
        'a': 7000, 'e': 0.2, 'i': 28.5, 
        'omega': 0, 'Omega': 0, 'M0': 0
    }
    validation = orbital_service.validate_orbital_elements(test_elements)
    if validation['valid']:
        print("   ‚úÖ Validaci√≥n exitosa")
    else:
        print(f"   ‚ùå Error en validaci√≥n: {validation['errors']}")
        
    # Test 4: Presets
    print("4. Probando presets...")
    presets = orbital_service.get_orbital_presets()
    print(f"   ‚úÖ {len(presets)} presets disponibles: {list(presets.keys())}")
    
    # Test 5: Simulaci√≥n r√°pida
    print("5. Probando simulaci√≥n...")
    result = simulation_service.run_simulation(test_elements, 1800, 60)  # 30 min, 60s pasos
    if result['success']:
        print(f"   ‚úÖ Simulaci√≥n exitosa - {result['total_points']} puntos calculados")
        print(f"   üìä Per√≠odo orbital: {result['orbital_period']:.0f} segundos")
    else:
        print(f"   ‚ùå Error en simulaci√≥n: {result['error']}")
    
    print("=" * 50)
    print("üéâ ¬°Todos los tests pasaron! El backend est√° listo.")
    
except ImportError as e:
    print(f"‚ùå Error de importaci√≥n: {e}")
    print("Aseg√∫rate de que las dependencias est√©n instaladas:")
    print("pip install flask flask-cors numpy matplotlib scipy python-dotenv")
    sys.exit(1)
    
except Exception as e:
    print(f"‚ùå Error inesperado: {e}")
    sys.exit(1)